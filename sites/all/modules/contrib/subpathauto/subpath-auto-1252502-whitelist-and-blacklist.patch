diff --git a/subpathauto.admin.inc b/subpathauto.admin.inc
index d18df86a72558784e70253629b6826d1904c97cd..5ec64f9ecc2cc316afe090de15f2017287a355fc 100644
--- a/subpathauto.admin.inc
+++ b/subpathauto.admin.inc
@@ -26,5 +26,59 @@ function subpathauto_settings_form($form, &$form_state) {
     '#default_value' => variable_get('subpathauto_ignore_admin', 1),
   );
 
+  $out_description = t("Specify pages by using their internal drupal paths. Enter one path per line. The '*' character is a wildcard. Example paths are %node-edit for the node edit page and %node-revisions for the node revisions page.", array('%node-edit' => 'node/*/edit', '%node-revisions' => 'node/*/revisions'));
+  $in_description = t("Specify pages by using their aliased paths. Enter one path per line. The '*' character is a wildcard. Example paths are %node-edit for the node edit page and %node-revisions for the node revisions page.", array('%node-edit' => 'content/node-title/edit', '%node-revisions' => 'content/node-title/revisions'));
+
+  $form['filter'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('URL filtering'),
+    '#description' => t('For more control over when subpathauto applies subpath aliasing, you can use these whitelist and blacklist filters to include or exclude paths in/from the rewrite process.'),
+  );
+
+  $form['filter']['outbound'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('Outbound subpath filters'),
+    '#description' => t('The outbound filter controls which links to internal drupal paths are aliased. The blacklist takes precedence will be applied first followed by the whitelist.'),
+  );
+
+  $form['filter']['outbound']['subpathauto_outbound_whitelist'] = array(
+    '#type' => 'textarea',
+    '#title' => t('Whitelist'),
+    '#default_value' => variable_get('subpathauto_outbound_whitelist', ''),
+    '#description' => $out_description,
+  );
+
+  $form['filter']['outbound']['subpathauto_outbound_blacklist'] = array(
+    '#type' => 'textarea',
+    '#title' => t('Blacklist'),
+    '#default_value' => variable_get('subpathauto_outbound_blacklist', ''),
+    '#description' => $out_description,
+  );
+
+  $inbound_whitelist = variable_get('subpathauto_inbound_whitelist', '');
+  $inbound_blacklist = variable_get('subpathauto_inbound_blacklist', '');
+
+  $form['filter']['inbound'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('Inbound subpath filters'),
+    '#description' => t('The inbound filter controls which aliases should be converted to internal drupal paths. The main reason for using filters here is to improve performance by avoiding lookups on every path. Being overzealous here could cause many 404 errors on your site if its not allowed to process valid subpaths. The blacklist takes precedence and will be applied first followed by the whitelist.'),
+    '#collapsible' => TRUE,
+    '#collapsed' => empty($inbound_whitelist) && empty($inbound_blacklist),
+  );
+
+  $form['filter']['inbound']['subpathauto_inbound_whitelist'] = array(
+    '#type' => 'textarea',
+    '#title' => t('Whitelist'),
+    '#default_value' => $inbound_whitelist,
+    '#description' => $in_description,
+  );
+
+  $form['filter']['inbound']['subpathauto_inbound_blacklist'] = array(
+    '#type' => 'textarea',
+    '#title' => t('Blacklist'),
+    '#default_value' => $inbound_blacklist,
+    '#description' => $in_description,
+  );
+
   return system_settings_form($form);
 }
diff --git a/subpathauto.module b/subpathauto.module
index def9f1b7893b8db774c4114463248276d5c2c03e..a9969e99fcc2969c37fa90d0e67ff04c99d90bb6 100644
--- a/subpathauto.module
+++ b/subpathauto.module
@@ -84,11 +84,11 @@ function subpathauto_lookup_subpath($action, $path = '', $original_path, $path_l
     // be skipped from sub-path processing.
     return FALSE;
   }
-  if (variable_get('subpathauto_ignore_admin', 1) && path_is_admin($path)) {
-    // Ignore administration paths by default.
+
+  if ($action == 'source' && !subpathauto_validate_subpath('inbound', $path)) {
     return FALSE;
   }
-  if (drupal_match_path($path, "<front>\njs/*")) {
+  elseif ($action == 'alias' && !subpathauto_validate_subpath('outbound', $path)) {
     return FALSE;
   }
 
@@ -135,6 +135,51 @@ function subpathauto_lookup_subpath($action, $path = '', $original_path, $path_l
 }
 
 /**
+ * Given an alias, apply the whitelist and blacklist filters and find out whether it's a path that needs to be
+ * converted or not.
+ *
+ * @param $type
+ *   One of the following values:
+ *   - outbound: check the path against outbound filters.
+ *   - inbound: check the path against inbound filters.
+ * @param $path
+ *   The path to investigate against the filters.
+ *
+ * @return
+ *   TRUE if valid or FALSE.
+ */
+function subpathauto_validate_subpath($type, $path = '') {
+  // Blacklist takes precedence
+  $blacklist = variable_get("subpathauto_${type}_blacklist", '');  
+  if (!empty($blacklist)) {
+    if (drupal_match_path($path, $blacklist)) {
+      return FALSE;
+    }
+  }
+  // Whitelist is second in precedence
+  $whitelist = variable_get("subpathauto_${type}_whitelist", '');
+  if (!empty($whitelist)) {
+    if (drupal_match_path($path, $whitelist)) {
+      return TRUE;
+    }
+    // The whitelist has been set, but the path doesn't match, so return FALSE.
+    else {
+      return FALSE;
+    }
+  }
+  // Admin paths
+  if (variable_get('subpathauto_ignore_admin', 1) && path_is_admin($path)) {
+    // Ignore administration paths by default.
+    return FALSE;
+  }
+  if (drupal_match_path($path, "<front>\njs/*")) {
+    return FALSE;
+  }
+
+  return TRUE;
+}
+
+/**
  * Store sub-path aliases into the drupal_lookup_path() static cache.
  */
 function subpathauto_cache_subpath_alias($source, $alias, $langcode) {
