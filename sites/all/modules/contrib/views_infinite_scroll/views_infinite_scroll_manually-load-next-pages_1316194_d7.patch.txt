From 9d6dc31da4ad4ed35de708da34762db825ab591f Mon Sep 17 00:00:00 2001
From: Jay Roberts <jay@gloryfish.org>
Date: Wed, 13 Mar 2013 14:00:56 -0400
Subject: [PATCH] Apply show more patch for 7.x-1.1

---
 js/views_infinite_scroll.js            |   51 ++++++++++++++++++++++----------
 theme/views_infinite_scroll_theme.inc  |    5 ++++
 views_plugin_pager_infinite_scroll.inc |   48 +++++++++++++++++++++++++++++-
 3 files changed, 88 insertions(+), 16 deletions(-)

diff --git a/js/views_infinite_scroll.js b/js/views_infinite_scroll.js
index b1d1465..ff7d1fd 100644
--- a/js/views_infinite_scroll.js
+++ b/js/views_infinite_scroll.js
@@ -9,7 +9,7 @@ Drupal.behaviors.views_infinite_scroll = {
       if(!views_infinite_scroll_was_initialised) {
         views_infinite_scroll_was_initialised = true;
         // There should not be multiple Infinite Scroll Views on the same page
-        if(Drupal.settings.views_infinite_scroll.length == 1) { 
+        if(Drupal.settings.views_infinite_scroll.length == 1) {
           var settings = Drupal.settings.views_infinite_scroll[0];
           var use_ajax = false;
           // Make sure that views ajax is disabled
@@ -26,6 +26,8 @@ Drupal.behaviors.views_infinite_scroll = {
             var items_selector   = content_selector + ' ' + settings.items_selector;
             var pager_selector   = view_selector + ' > div.item-list ' + settings.pager_selector;
             var next_selector    = view_selector + ' ' + settings.next_selector;
+            // The next element will be rearranged in the DOM.
+            var next_el          = $(next_selector);
             var img_location     = view_selector + ' > div.view-content';
             var img_path         = settings.img_path;
             var img              = '<div id="views_infinite_scroll-ajax-loader"><img src="' + img_path + '" alt="loading..."/></div>';
@@ -35,31 +37,50 @@ Drupal.behaviors.views_infinite_scroll = {
               content: items_selector,
               link: next_selector,
               page: 0,
+              autoLoad: !settings.manual_load,
               start: function() {
                 $(img_location).after(img);
               },
-              load: function() {
+              load: function(current, next) {
                 $('div#views_infinite_scroll-ajax-loader').remove();
                 Drupal.attachBehaviors(this);
+               // Use >= because of views page numbers begin at 0.
+               if (settings.manual_load && next.page >= settings.pager_max) {
+                 $(next_el).hide();
+               }
               }
             });
 
-            // Trigger autoload if content height is less than doc height already
-            var prev_content_height = $(content_selector).height();
-            do {
-              var last = $(items_selector).filter(':last');
-              if(last.offset().top + last.height() < $(document).scrollTop() + $(window).height()) {
-                last = $(items_selector).filter(':last');
+            if (settings.manual_load) {
+              // The pager is hidden. Pop "next" link out so it will be visible.
+              $(next_el).text(settings.text);
+              $(next_el).click(function() {
+                // do load
                 handle.autopager('load');
+                return false;
+              });
+              $(pager_selector).before($(next_el));
+              // Wrap the button to allow for easier styling in the theme
+              $(next_el).wrap('<div id="views_infinite_scroll_button" />');
+            }
+            else {
+              $(pager_selector).hide();
+              // Trigger autoload if content height is less than doc height already
+              var prev_content_height = $(content_selector).height();
+              do {
+                var last = $(items_selector).filter(':last');
+                if(last.offset().top + last.height() < $(document).scrollTop() + $(window).height()) {
+                  last = $(items_selector).filter(':last');
+                  handle.autopager('load');
+                }
+                else {
+                  break;
+                }
               }
-              else {
-                break;
-              }
+              while ($(content_selector).height() > prev_content_height);
             }
-            while ($(content_selector).height() > prev_content_height);
-
           }
-          else {  
+          else {
             alert(Drupal.t('Views infinite scroll pager is not compatible with Ajax Views. Please disable "Use Ajax" option.'));
           }
         }
@@ -72,6 +93,6 @@ Drupal.behaviors.views_infinite_scroll = {
       alert(Drupal.t('Autopager jquery plugin in not loaded.'));
     }
   }
-}
+};
 
 })(jQuery);
diff --git a/theme/views_infinite_scroll_theme.inc b/theme/views_infinite_scroll_theme.inc
index 3193238..526297f 100644
--- a/theme/views_infinite_scroll_theme.inc
+++ b/theme/views_infinite_scroll_theme.inc
@@ -12,6 +12,8 @@ function theme_views_infinite_scroll_pager($variables) {
   $content_selector = isset($variables['content_selector']) ? $variables['content_selector'] : 'div.view-content';
   $items_selector = isset($variables['items_selector']) ? $variables['items_selector'] : 'div.view-content .views-row';
   $img_path = $variables['img_path'];
+  $manual_load = isset($variables['manual_load']) ? $variables['manual_load'] : FALSE;
+  $text = isset($variables['text']) ? $variables['text'] : array('default' => 'Show More', 'translatable' => TRUE);
   $parameters = $variables['parameters'];
   $quantity = $variables['quantity'];
 
@@ -80,6 +82,9 @@ function theme_views_infinite_scroll_pager($variables) {
           'content_selector' => $content_selector,
           'items_selector' => $items_selector,
           'img_path' => $img_path,
+          'manual_load' => $manual_load,
+          'text' => t($text),
+          'pager_max' => $pager_max,
         ),
       ),
     );
diff --git a/views_plugin_pager_infinite_scroll.inc b/views_plugin_pager_infinite_scroll.inc
index 0c12eb9..03f7edc 100644
--- a/views_plugin_pager_infinite_scroll.inc
+++ b/views_plugin_pager_infinite_scroll.inc
@@ -10,6 +10,40 @@ class views_plugin_pager_infinite_scroll extends views_plugin_pager_full {
     parent::init($view, $display, $options);
   }
 
+  function option_definition() {
+    $options = parent::option_definition();
+    $options['manual_load'] = array('default' => 0);
+    $options['text'] = array('default' => 'Show More', 'translatable' => TRUE);
+    return $options;
+  }
+
+  /**
+   * Provide the default form for setting options.
+   */
+  function options_form(&$form, &$form_state) {
+    parent::options_form($form, $form_state);
+    $form['manual_load'] = array(
+      '#type' => 'checkbox',
+      '#title' => t('Load subsequent pages manually instead of automatically'),
+      '#description' => t('When checked, use a link to trigger loading of subsequent pages instead of window scroll.'),
+      '#default_value' => $this->options['manual_load'],
+      '#weight' => -10
+    );
+
+    $form['text'] = array(
+      '#type' => 'textfield',
+      '#title' => t('Manual load label'),
+      '#required' => TRUE,
+      '#description' => t('Label to use on the manual link.'),
+      '#default_value' => $this->options['text'],
+      '#process' => array('ctools_dependent_process'),
+      '#dependency' => array(
+        'edit-pager-options-manual-load' => array(1),
+      ),
+      '#weight' => -10
+    );
+  }
+
   function summary_title() {
     return "Infinite Scroll";
     if (!empty($this->options['offset'])) {
@@ -48,6 +82,18 @@ class views_plugin_pager_infinite_scroll extends views_plugin_pager_full {
         break;
     }
     $pager_theme = views_theme_functions('views_infinite_scroll_pager', $this->view, $this->display);
-    return theme($pager_theme, array('tags' => $input, 'quantity' => $this->options['items_per_page'], 'view_name' => $this->view->name, 'current_display' => $this->view->current_display, 'content_selector' => $content_selector, 'items_selector' => $items_selector, 'img_path' => $img_path, 'element' => $this->options['id']));
+    return theme($pager_theme,
+                  array('tags' => $input,
+                        'quantity' => $this->options['items_per_page'],
+                        'view_name' => $this->view->name,
+                        'current_display' => $this->view->current_display,
+                        'content_selector' => $content_selector,
+                        'items_selector' => $items_selector,
+                        'img_path' => $img_path,
+                        'element' => $this->options['id'],
+                        'manual_load' => $this->options['manual_load'],
+                        'text' => $this->options['text'],)
+                        );
+
   }
 }
-- 
1.7.9.6 (Apple Git-31.1)

